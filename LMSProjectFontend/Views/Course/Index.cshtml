@model PagedResponse<CourseModel>

@{
    ViewData["Title"] = "Course List";
}

<style>
    .course-image {
        transition: transform 0.2s ease-in-out;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .course-image:hover {
        transform: scale(1.05);
        cursor: pointer;
    }
    
    .image-error {
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    }
    
    .table-hover tbody tr:hover {
        background-color: rgba(0,123,255,0.05);
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        transition: all 0.2s ease;
    }
    
    .search-card {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        color: white;
    }
    
    .search-card .form-control {
        border: none;
        border-radius: 8px;
        padding: 12px 16px;
        font-size: 16px;
    }
    
    .search-card .input-group-text {
        background: rgba(255,255,255,0.2);
        border: none;
        color: white;
        border-radius: 8px 0 0 8px;
    }
    
    .search-card .btn {
        border-radius: 8px;
        border: 1px solid rgba(255,255,255,0.3);
        background: rgba(255,255,255,0.1);
        color: white;
        transition: all 0.3s ease;
    }
    
    .search-card .btn:hover {
        background: rgba(255,255,255,0.2);
        transform: translateY(-1px);
    }
    
    .card-header {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-bottom: 2px solid #dee2e6;
    }
    
    .pagination .page-link {
        border-radius: 6px;
        margin: 0 2px;
        border: 1px solid #dee2e6;
        color: #495057;
        transition: all 0.2s ease;
    }
    
    .pagination .page-link:hover {
        background-color: #e9ecef;
        border-color: #adb5bd;
        transform: translateY(-1px);
    }
    
    .pagination .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
        box-shadow: 0 2px 4px rgba(0,123,255,0.3);
    }
    
    .btn-group .btn {
        border-radius: 6px;
        margin: 0 1px;
        transition: all 0.2s ease;
    }
    
    .btn-group .btn:hover {
        transform: translateY(-1px);
        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }
    
    .loading-spinner {
        background: rgba(255,255,255,0.9);
        backdrop-filter: blur(5px);
    }
    
    .no-results {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-radius: 12px;
        border: 2px dashed #dee2e6;
    }
    
    .no-results i {
        color: #6c757d;
        opacity: 0.7;
    }
</style>

<div class="container-xxl flex-grow-1 container-p-y">

    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb mb-4">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Dashboard</a></li>
            <li class="breadcrumb-item active" aria-current="page">Courses</li>
        </ol>
    </nav>

    <!-- Page Title -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="fw-bold">Course List</h4>
        <a asp-controller="Course" asp-action="AddEdit" class="btn btn-success">
            <i class="bx bx-plus"></i> Add New Course
        </a>
    </div>

    <!-- Success / Error Messages -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Course Table -->
    <div class="card">
        <div class="table-responsive text-nowrap">
            <table id="courseTable" class="table table-bordered">
                <thead class="table-light">
                    <tr>
                        <th>Course Title</th>
                        <th>Description</th>
                        <th>Teacher</th>
                        <th>Image</th>
                        <th>Created At</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="courseTableBody" class="table-border-bottom-0">
                    @foreach (var course in Model.Data)
                    {
                        <tr>
                            <td><strong>@course.Title</strong></td>
                            <td>@course.Description</td>
                            <td>@course.TeacherName</td>
                            <td>
                                @if (!string.IsNullOrEmpty(course.ImageUrl))
                                {
                                    <div class="position-relative">
                                        <img src="@course.ImageUrl" alt="@course.Title" class="img-thumbnail course-image"
                                             style="max-height: 100px; max-width: 100px; object-fit: cover;"
                                             onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                        <div class="image-error position-absolute top-0 start-0" style="display: none; height: 100px; width: 100px; background-color: #f8f9fa; border: 1px solid #dee2e6; border-radius: 0.375rem;">
                                            <div class="d-flex align-items-center justify-content-center h-100">
                                                <i class="bx bx-image fs-4 text-muted"></i>
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="image-error" style="height: 100px; width: 100px; background-color: #f8f9fa; border: 1px solid #dee2e6; border-radius: 0.375rem;">
                                        <div class="d-flex align-items-center justify-content-center h-100">
                                            <i class="bx bx-image fs-4 text-muted"></i>
                                        </div>
                                    </div>
                                }
                            </td>
                            <td>@course.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>
                            <td>
                                <a asp-controller="Course" asp-action="AddEdit" asp-route-id="@course.CourseId" class="btn btn-sm btn-outline-warning me-1">
                                    <i class="bx bx-edit-alt"></i> Edit
                                </a>
                                <a asp-controller="Course" asp-action="Delete" asp-route-id="@course.CourseId" class="btn btn-sm btn-outline-danger">
                                    <i class="bx bx-trash"></i> Delete
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Pagination -->
    <div class="d-flex justify-content-between align-items-center mt-3">
        <div>
            Showing page @Model.PageNumber of @Model.TotalPages
            (Total Records: @Model.TotalRecords)
        </div>

        <nav>
            <ul class="pagination mb-0">
                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                    <a class="page-link" href="?pageNumber=@(Model.PageNumber - 1)&pageSize=@Model.PageSize">Previous</a>
                </li>

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                        <a class="page-link" href="?pageNumber=@i&pageSize=@Model.PageSize">@i</a>
                    </li>
                }

                <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="?pageNumber=@(Model.PageNumber + 1)&pageSize=@Model.PageSize">Next</a>
                </li>
            </ul>
        </nav>
    </div>

</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        let pageNumber = 1;
        let pageSize = parseInt($("#pageSizeSelect").val());
        let searchTimeout;

        // Initialize page size
        $("#pageSizeSelect").val(pageSize);

        // Search functionality with debouncing
        $("#globalSearch").on('input', function() {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(function() {
                loadCourses(1);
            }, 500);
        });

        // Clear search
        $("#clearSearch").click(function() {
            $("#globalSearch").val('');
            loadCourses(1);
        });

        // Refresh button
        $("#refreshBtn").click(function() {
            $("#globalSearch").val('');
            loadCourses(1);
        });

        // Page size change
        $("#pageSizeSelect").change(function() {
            pageSize = parseInt($(this).val());
            loadCourses(1);
        });

        // Function to load courses with search + pagination
        function loadCourses(page) {
            let keyword = $("#globalSearch").val();
            pageNumber = page;

            // Show loading spinner
            $("#loadingSpinner").show();
            $("#courseTableBody").hide();
            $("#noResults").hide();

            $.ajax({
                url: '/Course/Search',
                type: 'GET',
                data: { 
                    keyword: keyword, 
                    pageNumber: page, 
                    pageSize: pageSize 
                },
                success: function (response) {
                    $("#loadingSpinner").hide();
                    
                    if (response.data && response.data.length > 0) {
                        $("#courseTableBody").show();
                        $("#noResults").hide();
                        
                        let rows = '';
                        $.each(response.data, function (i, course) {
                            rows += `<tr>
                                        <td><strong>${course.title || ''}</strong></td>
                                        <td>${course.description || ''}</td>
                                        <td>${course.teacherName || 'Unknown Teacher'}</td>
                                        <td>
                                            ${course.imageUrl
                                              ? `<div class="position-relative">
                                                   <img src="${course.imageUrl}" alt="${course.title || 'Course'}" 
                                                        class="img-thumbnail course-image"
                                                        style="max-height: 100px; max-width: 100px; object-fit: cover; cursor: pointer;"
                                                        onclick="showImageModal('${course.imageUrl}', '${course.title || 'Course'}')"
                                                        onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                                   <div class="image-error position-absolute top-0 start-0" style="display: none; height: 100px; width: 100px; background-color: #f8f9fa; border: 1px solid #dee2e6; border-radius: 0.375rem;">
                                                     <div class="d-flex align-items-center justify-content-center h-100">
                                                       <i class="bx bx-image fs-4 text-muted"></i>
                                                     </div>
                                                   </div>
                                                 </div>`
                                              : `<div class="image-error" style="height: 100px; width: 100px; background-color: #f8f9fa; border: 1px solid #dee2e6; border-radius: 0.375rem;">
                                                   <div class="d-flex align-items-center justify-content-center h-100">
                                                     <i class="bx bx-image fs-4 text-muted"></i>
                                                   </div>
                                                 </div>`}
                                        </td>
                                        <td>${course.createdAt ? new Date(course.createdAt).toLocaleString() : ''}</td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <a href="/Course/AddEdit/${course.courseId}" class="btn btn-sm btn-outline-warning me-1">
                                                    <i class="bx bx-edit-alt"></i> Edit
                                                </a>
                                                <button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteCourse(${course.courseId}, '${course.title || 'Course'}')">
                                                    <i class="bx bx-trash"></i> Delete
                                                </button>
                                            </div>
                                        </td>
                                    </tr>`;
                        });
                        $("#courseTableBody").html(rows);

                        // Update pagination info
                        $("#paginationInfo").html(`Showing page ${response.pageNumber} of ${response.totalPages} (Total Records: ${response.totalRecords})`);

                        // Build pagination
                        let pagination = '';
                        
                        // Previous button
                        pagination += `<li class="page-item ${response.pageNumber == 1 ? 'disabled' : ''}">
                                        <button class="page-link page-btn" data-page="${response.pageNumber - 1}" ${response.pageNumber == 1 ? 'disabled' : ''}>Previous</button>
                                      </li>`;
                        
                        // Page numbers
                        for (let i = 1; i <= response.totalPages; i++) {
                            pagination += `<li class="page-item ${i === response.pageNumber ? 'active' : ''}">
                                            <button class="page-link page-btn" data-page="${i}">${i}</button>
                                          </li>`;
                        }
                        
                        // Next button
                        pagination += `<li class="page-item ${response.pageNumber == response.totalPages ? 'disabled' : ''}">
                                        <button class="page-link page-btn" data-page="${response.pageNumber + 1}" ${response.pageNumber == response.totalPages ? 'disabled' : ''}>Next</button>
                                      </li>`;
                        
                        $("#paginationContainer").html(pagination);

                        // Attach event to page buttons
                        $(".page-btn").click(function () {
                            let selectedPage = parseInt($(this).data("page"));
                            if (selectedPage >= 1 && selectedPage <= response.totalPages) {
                                loadCourses(selectedPage);
                            }
                        });
                    } else {
                        $("#courseTableBody").hide();
                        $("#noResults").show();
                        $("#paginationInfo").html('No results found');
                        $("#paginationContainer").html('');
                    }
                },
                error: function (xhr, status, error) {
                    $("#loadingSpinner").hide();
                    $("#courseTableBody").show();
                    console.error("Error fetching courses:", error);
                    
                    // Show error message
                    if (!$("#errorAlert").length) {
                        $("#courseTable").before('<div id="errorAlert" class="alert alert-danger alert-dismissible fade show" role="alert">Error loading courses. Please try again.<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>');
                    }
                }
            });
        }

        // Initial load
        loadCourses(pageNumber);
    });

    // Global functions
    function showImageModal(imageUrl, title) {
        $("#modalImage").attr("src", imageUrl).attr("alt", title);
        $("#imageModalLabel").text(title || 'Course Image');
        new bootstrap.Modal(document.getElementById('imageModal')).show();
    }

    function deleteCourse(courseId, courseTitle) {
        $("#courseTitleToDelete").text(courseTitle);
        $("#confirmDeleteBtn").data("courseId", courseId);
        new bootstrap.Modal(document.getElementById('deleteModal')).show();
    }

    // Delete confirmation
    $("#confirmDeleteBtn").click(function() {
        const courseId = $(this).data("courseId");
        
        $.ajax({
            url: `/Course/Delete/${courseId}`,
            type: 'POST',
            success: function(response) {
                // Close modal
                bootstrap.Modal.getInstance(document.getElementById('deleteModal')).hide();
                
                // Reload courses
                loadCourses(1);
                
                // Show success message
                if (!$("#successAlert").length) {
                    $(".container-xxl").prepend('<div id="successAlert" class="alert alert-success alert-dismissible fade show" role="alert">Course deleted successfully!<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>');
                }
            },
            error: function() {
                alert("Error deleting course. Please try again.");
            }
        });
    });
</script>

